<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Michael Bach</title>
    <link>/</link>
    <description>Recent content on Michael Bach</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Sat, 08 Aug 2020 00:00:00 +0000</lastBuildDate><atom:link href="/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>About</title>
      <link>/about/</link>
      <pubDate>Fri, 23 Oct 2020 00:00:00 +0000</pubDate>
      
      <guid>/about/</guid>
      <description>Hi there,
My name is Michael. I&amp;rsquo;m working as data scientist at BILLA MERKUR Österreich (BMÖ) - part of REWE International AG - two of Austria&amp;rsquo;s leading retail companies BILLA and MERKUR. As data scientist at BMÖ I&amp;rsquo;m part of a great team - eager to support our business departments in developing a data-driven culture. With the help of advanced analytics and a strong BI department, we&amp;rsquo;re trying to enable others to make data-based decisions.</description>
    </item>
    
    <item>
      <title>Customize Docker Container</title>
      <link>/posts/custom-docker-image/</link>
      <pubDate>Sat, 08 Aug 2020 00:00:00 +0000</pubDate>
      
      <guid>/posts/custom-docker-image/</guid>
      <description>TL;DR
Creating your own Docker image is fairly easy, when using a parent image. Basically, you pull the parent image and set up your specifications according to your needs for your custom container. You can specify pretty much everything in your Dockerfile.
 In this post I’d like to give a quick overview of how to customize a python container to run your app or to use it as playground.</description>
    </item>
    
    <item>
      <title>Useful links</title>
      <link>/links/</link>
      <pubDate>Mon, 13 Jul 2020 00:00:00 +0000</pubDate>
      
      <guid>/links/</guid>
      <description>I added some links below, which I found particularly helpful as resources for certain topics:
CI/CD  architecture: https://www.atlassian.com/continuous-delivery GitLab CI/CD: https://docs.gitlab.com/ee/ci/pipelines/pipeline_architectures.html  docker  containers for R: https://www.rocker-project.org/ Docker documentation: https://docs.docker.com/ Install Docker Engine on Ubuntu: https://docs.docker.com/engine/install/ubuntu/  git  cheat sheet: https://education.github.com/git-cheat-sheet-education.pdf  python  environment: https://realpython.com/effective-python-environment/ environment: https://realpython.com/python-virtual-environments-a-primer/ environment: https://protostar.space/why-you-need-python-environments-and-how-to-manage-them-with-conda environment: https://docs.python.org/3/tutorial/venv.html even more environment: https://docs.python-guide.org/dev/virtualenvs/  R skills  problem solving: https://www.freecodecamp.org/news/how-to-think-like-a-programmer-lessons-in-problem-solving-d1d8bf1de7d2/  </description>
    </item>
    
    <item>
      <title>Getting started with Docker</title>
      <link>/posts/getting-started-with-docker/</link>
      <pubDate>Sun, 28 Jun 2020 00:00:00 +0000</pubDate>
      
      <guid>/posts/getting-started-with-docker/</guid>
      <description>TL;DR
This post is meant to be a little cheat sheet for Docker setup and usage. Docker is a great tool to containerize your software products, which makes your products portable and usable in several areas (e.g. cloud or on-premises). Additionally, it is a great playground for developers as containers can offer a secure environment to try out something new without risking to break something. Furthermore, they scale nicely and are therefore rather resource-efficient.</description>
    </item>
    
    <item>
      <title>Setting up your first build</title>
      <link>/posts/setting-up-your-first-build/</link>
      <pubDate>Mon, 18 May 2020 00:00:00 +0000</pubDate>
      
      <guid>/posts/setting-up-your-first-build/</guid>
      <description>TL;DR
After building your own PC you might want to install your OS. Most will choose between Windows and a Linux distribution, but you can also have all in one with WSL 2 (Windows Subsystem for Linux) or both with a dual boot mode. I describe the setup for a dual boot mode on two physically separated SSDs. Most information is straight forward and easy to find on the Microsoft or e.</description>
    </item>
    
    <item>
      <title>Building your own tower</title>
      <link>/posts/building-your-own-tower/</link>
      <pubDate>Fri, 17 Apr 2020 00:00:00 +0000</pubDate>
      
      <guid>/posts/building-your-own-tower/</guid>
      <description>TL;DR
Before starting with a new build, know what you would like to use it for. Make sure to be aware if you need certain hardware for specific tasks (e.g. NVIDIA for deep learning). Check some websites to minimize compatibility issues (e.g. pc partpicker or logical increments) as well as the compatibility guidelines of your mobo. There are plenty YouTube tutorials, which are quite handy in terms of assembling guidelines (e.</description>
    </item>
    
  </channel>
</rss>
