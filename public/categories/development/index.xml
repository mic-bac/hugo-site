<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>development on Michael Bach</title>
    <link>/categories/development/</link>
    <description>Recent content in development on Michael Bach</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Sat, 08 Aug 2020 00:00:00 +0000</lastBuildDate><atom:link href="/categories/development/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Customize Docker Container</title>
      <link>/posts/custom-docker-image/</link>
      <pubDate>Sat, 08 Aug 2020 00:00:00 +0000</pubDate>
      
      <guid>/posts/custom-docker-image/</guid>
      <description>TL;DR
Creating your own Docker image is fairly easy, when using a parent image. Basically, you pull the parent image and set up your specifications according to your needs for your custom container. You can specify pretty much everything in your Dockerfile.
 In this post I’d like to give a quick overview of how to customize a python container to run your app or to use it as playground.</description>
    </item>
    
    <item>
      <title>Getting started with Docker</title>
      <link>/posts/getting-started-with-docker/</link>
      <pubDate>Sun, 28 Jun 2020 00:00:00 +0000</pubDate>
      
      <guid>/posts/getting-started-with-docker/</guid>
      <description>TL;DR
This post is meant to be a little cheat sheet for Docker setup and usage. Docker is a great tool to containerize your software products, which makes your products portable and usable in several areas (e.g. cloud or on-premises). Additionally, it is a great playground for developers as containers can offer a secure environment to try out something new without risking to break something. Furthermore, they scale nicely and are therefore rather resource-efficient.</description>
    </item>
    
  </channel>
</rss>
